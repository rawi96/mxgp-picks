datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  includeRelationFromFields = true
}
model User {
  id                 String             @id @default(uuid())
  email              String             @unique
  username           String             @unique
  score              Int                @default(0)
  password           String
  isAdmin            Boolean
  picks              Pick[]
}

model Pick {
  id                 String             @id @default(uuid())
  user               User               @relation(fields: [userId], references: [id])
  userId             String
  race               Race               @relation(fields: [raceId], references: [id])
  raceId             String             @unique
  result             Result             @relation(fields: [resultId], references: [id])
  resultId           String             @unique
}

model Rider {
  id                 String             @id @default(uuid())
  firstname          String         
  lastname           String             
  numberplate        Int      
  firsts             Result[]          @relation("first")
  seconds            Result[]          @relation("second")
  thirds             Result[]          @relation("third")
  forths             Result[]          @relation("forth")
  fifths             Result[]          @relation("fifth")
  wildcards          Result[]          @relation("wildcard")
}
model Race {
  id                String             @id @default(uuid())
  title             String         
  date              DateTime             
  factor            Int          
  wildcardPos       Int  
  raceResult        RaceResult?   
  picks             Pick[]
}
model RaceResult {
  id                String         @id @default(uuid())
  race              Race           @relation(fields: [raceId], references: [id])
  raceId            String         @unique
  result            Result         @relation(fields: [resultId], references: [id])
  resultId          String         @unique
}
model Result {
  id              String             @id @default(uuid())
  first           Rider              @relation("first", fields: [firstId], references: [id])
  firstId         String             @unique
  second          Rider              @relation("second", fields: [secondId], references: [id])
  secondId        String             @unique
  third           Rider              @relation("third", fields: [thirdId], references: [id])
  thirdId         String             @unique
  forth           Rider              @relation("forth", fields: [forthId], references: [id])
  forthId         String             @unique
  fifth           Rider              @relation("fifth", fields: [fifthId], references: [id])
  fifthId         String             @unique
  wildcard        Rider              @relation("wildcard", fields: [wildcardId], references: [id])
  wildcardId      String             @unique
  raceResult      RaceResult?
  pick            Pick?
}